{"version":3,"sources":["Sidebar/SiderbarUserList.js","Sidebar/Drawer2.js"],"names":["TooltipCustom","React","lazy","SidebarUserList","data","useStateValue","user","className","Avatar","src","photoURL","name","email","icon","style","color","onClick","e","preventDefault","db","collection","add","roomOwner","uid","createdBy","displayName","participants","timestamp","firebase","firestore","FieldValue","serverTimestamp","then","docRef","doc","id","set","merge","get","snapshot","userRooms","rooms","push","update","catch","error","console","SearchBar","useStyles","makeStyles","theme","root","display","drawerPaper","position","Drawer2","myUsers","drawer2","setDrawer2","userData","setIsRoomExist","isRoomExist","classes","useState","search","setSearch","loading","noRooms","Suspense","fallback","Drawer","anchor","variant","open","paper","IconButton","placeholder","filter","x","toLowerCase","includes","map","CircularProgress"],"mappings":"2RASMA,G,OAAgBC,IAAMC,MAAK,kBAAM,yDAkDxBC,MAjDf,YAAoC,IAATC,EAAQ,EAARA,KACzB,EAAmBC,cAAVC,EAAT,oBAASA,KAiCT,OACE,yBAAKC,UAAU,eACb,kBAACC,EAAA,EAAD,CAAQC,IAAKL,EAAKM,WAClB,yBAAKH,UAAU,qBACb,4BAAKH,EAAKO,MACV,2BAAIP,EAAKQ,OACT,kBAACZ,EAAD,CACEW,KAAK,aACLE,KAAM,kBAAC,IAAD,CAAeC,MAAO,CAAEC,MAAO,aACrCC,QAxCW,SAACC,GAClBA,EAAEC,iBAEFC,IAAGC,WAAW,SACXC,IAAI,CACHC,UAAWhB,EAAKiB,IAChBC,UAAWlB,EAAKmB,YAChBd,KAAM,OACNe,aAAc,CAACpB,EAAKiB,IAAKnB,EAAKmB,KAC9BI,UAAWC,IAASC,UAAUC,WAAWC,oBAE1CC,MAAK,SAAUC,GACdd,IAAGC,WAAW,SAASc,IAAID,EAAOE,IAAIC,IACpC,CACED,GAAIF,EAAOE,IAEb,CAAEE,OAAO,IAEXlB,IAAGC,WAAW,SACXc,IAAI5B,EAAKiB,KACTe,MACAN,MAAK,SAACO,GACL,IAAMC,EAAYD,EAASnC,OAAOqC,MAClCD,EAAUE,KAAKT,EAAOE,IACtBhB,IAAGC,WAAW,SAASc,IAAI5B,EAAKiB,KAAKoB,OAAO,CAAEF,MAAOD,UAG1DI,OAAM,SAAUC,GACfC,QAAQD,MAAM,0BAA2BA,YC5B3CE,EAAY9C,IAAMC,MAAK,kBAAM,iCAE7B8C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXC,SAAU,gBA2GCC,UAvGf,YAOI,IAWyBC,EAjB3BC,EAMC,EANDA,QACAC,EAKC,EALDA,WAIAC,GACC,EAJDlB,MAIC,EAHDmB,eAGC,EAFDC,YAEC,EADDF,UAEMG,EAAUd,IAEhB,EAA4Be,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KACA,GADA,KAC8BH,oBAAS,IAAvC,mBAAOI,EAAP,KAeA,OAfA,KAgBE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,uCACxB,6BACE,kBAACC,EAAA,EAAD,CACEC,OAAO,OACPC,QAAQ,aACRC,KAAMhB,EACNK,QAAS,CAAEY,MAAOZ,EAAQT,cAE1B,yBAAK9C,UAAU,sBACb,yBAAKA,UAAU,gCACb,kBAACoE,EAAA,EAAD,CAAY3D,QAxBE,WACxB0C,GAAW,KAwBC,kBAAC,IAAD,OAEF,yCAGJ,yBAAKnD,UAAU,uBACb,kBAACwC,EAAD,CACEiB,OAAQA,EACRC,UAAWA,EACXW,YAAY,6BAEd,yBAAKrE,UAAU,mBACb,wFAEF,yBAAKA,UAAU,mBACA,IAAZ2D,EACC,oCACGF,EACC,oCACE,6BACGL,EACCA,EACGkB,QA3CArB,EA2CgBQ,EA1ClC,SAAUc,GAEf,OADiBA,EAAEnE,KAAO,IAEboE,cAAcC,SAASxB,EAAQuB,iBAAmBvB,KAwCxCyB,KAAI,SAAC3E,GAAD,OAAU,kBAAC,EAAD,CAAiBF,KAAME,OAExC,yBAAKC,UAAU,iCACb,4DAMR,oCACGoD,EACCA,EAASsB,KAAI,SAAC3E,GAAD,OAAU,kBAAC,EAAD,CAAiBF,KAAME,OAE9C,yBAAKC,UAAU,iCACb,mDAOV,yBAAKA,UAAU,mCACb,6BACE,kBAAC2E,EAAA,EAAD,QAKLf,GAAWD,EACV,yBAAK3D,UAAU,iCACb,2CAEA","file":"static/js/26.3878d3e5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport db from \"../firebase\";\r\nimport \"./SiderbarUserList.css\";\r\nimport { firebase } from \"../firebase\";\r\n\r\nconst TooltipCustom = React.lazy(() => import(\"../shared/TooltipCustom\"));\r\nfunction SidebarUserList({ data }) {\r\n  const [{ user }] = useStateValue();\r\n\r\n  const createChat = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"rooms\")\r\n      .add({\r\n        roomOwner: user.uid,\r\n        createdBy: user.displayName,\r\n        name: \"room\",\r\n        participants: [user.uid, data.uid],\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n      .then(function (docRef) {\r\n        db.collection(\"rooms\").doc(docRef.id).set(\r\n          {\r\n            id: docRef.id,\r\n          },\r\n          { merge: true }\r\n        );\r\n        db.collection(\"users\")\r\n          .doc(user.uid)\r\n          .get()\r\n          .then((snapshot) => {\r\n            const userRooms = snapshot.data().rooms;\r\n            userRooms.push(docRef.id);\r\n            db.collection(\"users\").doc(user.uid).update({ rooms: userRooms });\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"sidebarChat\">\r\n      <Avatar src={data.photoURL}></Avatar>\r\n      <div className=\"sidebarChat__info\">\r\n        <h2>{data.name}</h2>\r\n        <p>{data.email}</p>\r\n        <TooltipCustom\r\n          name=\"Add Friend\"\r\n          icon={<PersonAddIcon style={{ color: \"#de5751\" }} />}\r\n          onClick={createChat}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SidebarUserList;\r\n","import React, { useState } from \"react\";\r\n//importing components\r\n//importing material-ui\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n//importing material-ui-icons\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n//importing styles\r\nimport \"./Drawer2.css\";\r\nimport SidebarUserList from \"./SiderbarUserList\";\r\n\r\nconst SearchBar = React.lazy(() => import(\"../shared/SearchBar\"));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawerPaper: {\r\n    position: \"absolute\",\r\n  },\r\n}));\r\n\r\nfunction Drawer2({\r\n  drawer2,\r\n  setDrawer2,\r\n  rooms,\r\n  setIsRoomExist,\r\n  isRoomExist,\r\n  userData,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [noRooms, setNoRooms] = useState(false);\r\n\r\n  const handleDrawerClose = () => {\r\n    setDrawer2(false);\r\n  };\r\n\r\n  const findUser = function (myUsers) {\r\n    return function (x) {\r\n      var searchRoom = x.name + \"\";\r\n      return (\r\n        searchRoom.toLowerCase().includes(myUsers.toLowerCase()) || !myUsers\r\n      );\r\n    };\r\n  };\r\n\r\n  return (\r\n    <React.Suspense fallback={<p>Loading</p>}>\r\n      <div>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          variant=\"persistent\"\r\n          open={drawer2}\r\n          classes={{ paper: classes.drawerPaper }}\r\n        >\r\n          <div className=\"drawerLeft__header\">\r\n            <div className=\"drawerLeft__header_container\">\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n              <p>Add User</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"drawerLeft__content\">\r\n            <SearchBar\r\n              search={search}\r\n              setSearch={setSearch}\r\n              placeholder=\"Search or start new chat\"\r\n            />\r\n            <div className=\"drawerLeft__not\">\r\n              <span>Select or Search for your new friends here at Tattle.</span>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n              {loading === false ? (\r\n                <>\r\n                  {search ? (\r\n                    <>\r\n                      <div>\r\n                        {userData ? (\r\n                          userData\r\n                            .filter(findUser(search))\r\n                            .map((user) => <SidebarUserList data={user} />)\r\n                        ) : (\r\n                          <div className=\"sidebar__chatsContainer_empty\">\r\n                            <span>No Users searched found</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {userData ? (\r\n                        userData.map((user) => <SidebarUserList data={user} />)\r\n                      ) : (\r\n                        <div className=\"sidebar__chatsContainer_empty\">\r\n                          <span>No Users found</span>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <div className=\"sidebar__chatsContainer_loading\">\r\n                  <div>\r\n                    <CircularProgress />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {noRooms && loading ? (\r\n                <div className=\"sidebar__chatsContainer_empty\">\r\n                  <span>No chats</span>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default Drawer2;\r\n"],"sourceRoot":""}