{"version":3,"sources":["Chat/Chat.js"],"names":["ChatHeader","React","lazy","ChatBody","ChatFooter","ChatLandingScreen","Chat","isRoomExist","history","useHistory","useStateValue","user","roomId","useParams","useState","_roomId","set_RoomId","roomName","setRoomName","roomCreatedBy","setRoomCreatedBy","roomOwner","setRoomOwner","messages","setMessages","messagesId","setMessagesId","loading","setLoading","showLandingScreenPhoto","setShowLandingScreenPhoto","chatUser","setChatUser","useEffect","db","collection","doc","onSnapshot","data","name","createdBy","id","fetchuserbyID","orderBy","docs","map","push","participants","includes","uid","other","splice","indexOf","get","then","snapshot","Suspense","fallback","className","firebase","storage"],"mappings":"4LAaMA,G,aAAaC,IAAMC,MAAK,kBAAM,yDAC9BC,EAAWF,IAAMC,MAAK,kBAAM,+DAC5BE,EAAaH,IAAMC,MAAK,kBAAM,6EAC9BG,EAAoBJ,IAAMC,MAAK,kBAAM,kCAoH5BI,UAnHf,YAAgC,IAAhBC,EAAe,EAAfA,YACRC,EAAUC,cAChB,EAAmBC,cAAVC,EAAT,oBAASA,KACDC,EAAWC,cAAXD,OACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAA4Dd,oBAAS,GAArE,mBAAOe,EAAP,KAA+BC,EAA/B,KACA,EAAgChB,mBAAS,MAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACJrB,GACFsB,IAAGC,WAAW,SACXC,IAAIxB,GACJyB,YAAW,SAAUD,GAAM,IAAD,QACzBlB,EAAW,UAACkB,EAAIE,cAAL,aAAC,EAAYC,MACxBnB,EAAgB,UAACgB,EAAIE,cAAL,aAAC,EAAYE,WAC7BlB,EAAY,UAACc,EAAIE,cAAL,aAAC,EAAYjB,WACzBL,EAAU,UAACoB,EAAIE,cAAL,aAAC,EAAYG,IACvBC,EAAcN,EAAIE,WAGtBJ,IAAGC,WAAW,SACXC,IAAIxB,GACJuB,WAAW,YACXQ,QAAQ,YAAa,OACrBN,YAAW,SAAUD,GACpBV,EAAcU,EAAIK,IAClBjB,EAAYY,EAAIQ,KAAKC,KAAI,SAACT,GAAD,OAASA,EAAIE,WACtCV,GAAW,MAGfE,GAA0B,KAE1BA,GAA0B,GAC1BtB,EAAQsC,KAAK,QAEd,CAAClC,EAAQJ,IAEZ,IAAMkC,EAAgB,SAACJ,GAAU,IAAD,EAC9B,aAAIA,EAAKS,oBAAT,aAAI,EAAmBC,SAASrC,EAAKsC,KAAM,CAAC,IAAD,EACnCC,EAAK,UAAGZ,EAAKS,oBAAR,aAAG,EAAmBI,OAC/Bb,EAAKS,aAAaK,QAAQzC,EAAKsC,IAAK,IAEtCf,IAAGC,WAAW,SACXC,IAAIc,EAAM,IACVG,MACAC,MAAK,SAACC,GACLvB,EAAYuB,EAASjB,aAK7B,OACE,kBAAC,IAAMkB,SAAP,CAAgBC,SAAU,uCACxB,yBAAKC,UAAU,QACZ9C,EACC,oCACE,6BACE,kBAACZ,EAAD,CACEmB,cAAeA,EACfE,UAAWA,EACXJ,SAAUA,EACVL,OAAQA,EACRG,QAASA,EACTU,WAAYA,EACZF,SAAUA,EACVW,GAAIA,IACJH,SAAUA,EACVvB,QAASA,EACTD,YAAaA,KAIjB,yBAAKmD,UAAU,cACZ/B,EACC,kBAACxB,EAAD,CACEgB,cAAeA,EACfE,UAAWA,EACXT,OAAQA,EACRW,SAAUA,EACVZ,KAAMA,EACNJ,YAAaA,IAGf,yBAAKmD,UAAU,sBACb,6BACE,kBAAC,IAAD,SAMR,6BACE,kBAACtD,EAAD,CACEa,SAAUA,EACVL,OAAQA,EACRsB,GAAIA,IACJyB,SAAUA,IACVC,QAASA,QAKf,kBAACvD,EAAD,CAAmBwB,uBAAwBA","file":"static/js/30.f5bab736.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//importing firebase\r\nimport db from \"../firebase\";\r\nimport { storage, firebase } from \"../firebase\";\r\n//importing components\r\n//importing material-ui\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n//importing styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Chat.css\";\r\n\r\nconst ChatHeader = React.lazy(() => import(\"./ChatHeader\"));\r\nconst ChatBody = React.lazy(() => import(\"./ChatBody\"));\r\nconst ChatFooter = React.lazy(() => import(\"./ChatFooter\"));\r\nconst ChatLandingScreen = React.lazy(() => import(\"./ChatLandingScreen\"));\r\nfunction Chat({ isRoomExist }) {\r\n  const history = useHistory();\r\n  const [{ user }] = useStateValue();\r\n  const { roomId } = useParams();\r\n  const [_roomId, set_RoomId] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [roomCreatedBy, setRoomCreatedBy] = useState(\"\");\r\n  const [roomOwner, setRoomOwner] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [messagesId, setMessagesId] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showLandingScreenPhoto, setShowLandingScreenPhoto] = useState(false);\r\n  const [chatUser, setChatUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot(function (doc) {\r\n          setRoomName(doc.data()?.name);\r\n          setRoomCreatedBy(doc.data()?.createdBy);\r\n          setRoomOwner(doc.data()?.roomOwner);\r\n          set_RoomId(doc.data()?.id);\r\n          fetchuserbyID(doc.data());\r\n        });\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot(function (doc) {\r\n          setMessagesId(doc.id);\r\n          setMessages(doc.docs.map((doc) => doc.data()));\r\n          setLoading(true);\r\n        });\r\n\r\n      setShowLandingScreenPhoto(false);\r\n    } else {\r\n      setShowLandingScreenPhoto(true);\r\n      history.push(\"/\");\r\n    }\r\n  }, [roomId, history]);\r\n\r\n  const fetchuserbyID = (data) => {\r\n    if (data.participants?.includes(user.uid)) {\r\n      const other = data.participants?.splice(\r\n        data.participants.indexOf(user.uid, 1)\r\n      );\r\n      db.collection(\"users\")\r\n        .doc(other[0])\r\n        .get()\r\n        .then((snapshot) => {\r\n          setChatUser(snapshot.data());\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Suspense fallback={<p>Loading</p>}>\r\n      <div className=\"chat\">\r\n        {roomId ? (\r\n          <>\r\n            <div>\r\n              <ChatHeader\r\n                roomCreatedBy={roomCreatedBy}\r\n                roomOwner={roomOwner}\r\n                roomName={roomName}\r\n                roomId={roomId}\r\n                _roomId={_roomId}\r\n                messagesId={messagesId}\r\n                messages={messages}\r\n                db={db}\r\n                chatUser={chatUser}\r\n                history={history}\r\n                isRoomExist={isRoomExist}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n              {loading ? (\r\n                <ChatBody\r\n                  roomCreatedBy={roomCreatedBy}\r\n                  roomOwner={roomOwner}\r\n                  roomId={roomId}\r\n                  messages={messages}\r\n                  user={user}\r\n                  isRoomExist={isRoomExist}\r\n                />\r\n              ) : (\r\n                <div className=\"chat__body_loading\">\r\n                  <div>\r\n                    <CircularProgress />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <ChatFooter\r\n                roomName={roomName}\r\n                roomId={roomId}\r\n                db={db}\r\n                firebase={firebase}\r\n                storage={storage}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <ChatLandingScreen showLandingScreenPhoto={showLandingScreenPhoto} />\r\n        )}\r\n      </div>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"sourceRoot":""}