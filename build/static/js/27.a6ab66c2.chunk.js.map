{"version":3,"sources":["Sidebar/SiderbarUserList.js","Sidebar/Drawer2.js"],"names":["SidebarUserList","data","to","className","Avatar","src","photoURL","name","email","SearchBar","React","lazy","useStyles","makeStyles","theme","root","display","drawerPaper","position","Drawer2","myUsers","drawer2","setDrawer2","userData","rooms","setIsRoomExist","isRoomExist","classes","useState","search","setSearch","loading","noRooms","Suspense","fallback","Drawer","anchor","variant","open","paper","IconButton","onClick","placeholder","filter","x","toLowerCase","includes","map","user","CircularProgress"],"mappings":"wQAsBeA,MAbf,YAAoC,IAATC,EAAQ,EAARA,KACzB,OACE,kBAAC,IAAD,CAAMC,GAAG,GAAGC,UAAU,qBACpB,yBAAKA,UAAU,eACb,kBAACC,EAAA,EAAD,CAAQC,IAAKJ,EAAKK,WAClB,yBAAKH,UAAU,qBACb,4BAAKF,EAAKM,MACV,2BAAIN,EAAKO,WCEbC,EAAYC,IAAMC,MAAK,kBAAM,iCAG7BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXC,SAAU,gBA2GCC,UAvGf,YAOI,IAWyBC,EAjB3BC,EAMC,EANDA,QACAC,EAKC,EALDA,WAIAC,GACC,EAJDC,MAIC,EAHDC,eAGC,EAFDC,YAEC,EADDH,UAEMI,EAAUf,IAEhB,EAA4BgB,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KACA,GADA,KAC8BH,oBAAS,IAAvC,mBAAOI,EAAP,KAeA,OAfA,KAgBE,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,uCACxB,6BACE,kBAACC,EAAA,EAAD,CACEC,OAAO,OACPC,QAAQ,aACRC,KAAMjB,EACNM,QAAS,CAAEY,MAAOZ,EAAQV,cAE1B,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,gCACb,kBAACqC,EAAA,EAAD,CAAYC,QAxBE,WACxBnB,GAAW,KAwBC,kBAAC,IAAD,OAEF,yCAGJ,yBAAKnB,UAAU,uBACb,kBAACM,EAAD,CACEoB,OAAQA,EACRC,UAAWA,EACXY,YAAY,6BAEd,yBAAKvC,UAAU,mBACb,wFAEF,yBAAKA,UAAU,mBACA,IAAZ4B,EACC,oCACGF,EACC,oCACE,6BACGN,EACCA,EACGoB,QA3CAvB,EA2CgBS,EA1ClC,SAAUe,GAEf,OADiBA,EAAErC,KAAO,IAEbsC,cAAcC,SAAS1B,EAAQyB,iBAAmBzB,KAwCxC2B,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAiB/C,KAAM+C,OAExC,yBAAK7C,UAAU,iCACb,4DAMR,oCACGoB,EACCA,EAASwB,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAiB/C,KAAM+C,OAE9C,yBAAK7C,UAAU,iCACb,mDAOV,yBAAKA,UAAU,mCACb,6BACE,kBAAC8C,EAAA,EAAD,QAKLjB,GAAWD,EACV,yBAAK5B,UAAU,iCACb,2CAEA","file":"static/js/27.a6ab66c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\n// import VideocamIcon from \"@material-ui/icons/Videocam\";\r\n// import db from \"../firebase\";\r\nimport \"./SidebarChat.css\";\r\n// console.log(use.uid);\r\n\r\nfunction SidebarUserList({ data }) {\r\n  return (\r\n    <Link to=\"\" className=\"sidebarChat__link\">\r\n      <div className=\"sidebarChat\">\r\n        <Avatar src={data.photoURL}></Avatar>\r\n        <div className=\"sidebarChat__info\">\r\n          <h2>{data.name}</h2>\r\n          <p>{data.email}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\nexport default SidebarUserList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n// import { useStateValue } from \"../StateProvider\";\r\n//importing components\r\n//importing material-ui\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import SearchBar from \"../shared/SearchBar\";\r\n// import SidebarChat from \"./SidebarChat\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n//importing material-ui-icons\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n//importing styles\r\nimport \"./Drawer2.css\";\r\nimport SidebarUserList from \"./SiderbarUserList\";\r\n// import \"./Sidebar.css\";\r\n\r\nconst SearchBar = React.lazy(() => import(\"../shared/SearchBar\"));\r\nconst SidebarChat = React.lazy(() => import(\"./SidebarChat\"));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawerPaper: {\r\n    position: \"absolute\",\r\n  },\r\n}));\r\n\r\nfunction Drawer2({\r\n  drawer2,\r\n  setDrawer2,\r\n  rooms,\r\n  setIsRoomExist,\r\n  isRoomExist,\r\n  userData,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [noRooms, setNoRooms] = useState(false);\r\n\r\n  const handleDrawerClose = () => {\r\n    setDrawer2(false);\r\n  };\r\n\r\n  const findUser = function (myUsers) {\r\n    return function (x) {\r\n      var searchRoom = x.name + \"\";\r\n      return (\r\n        searchRoom.toLowerCase().includes(myUsers.toLowerCase()) || !myUsers\r\n      );\r\n    };\r\n  };\r\n\r\n  return (\r\n    <React.Suspense fallback={<p>Loading</p>}>\r\n      <div>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          variant=\"persistent\"\r\n          open={drawer2}\r\n          classes={{ paper: classes.drawerPaper }}\r\n        >\r\n          <div className=\"drawerLeft__header\">\r\n            <div className=\"drawerLeft__header_container\">\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n              <p>Add User</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"drawerLeft__content\">\r\n            <SearchBar\r\n              search={search}\r\n              setSearch={setSearch}\r\n              placeholder=\"Search or start new chat\"\r\n            />\r\n            <div className=\"drawerLeft__not\">\r\n              <span>Select or Search for your new friends here at Tattle.</span>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n              {loading === false ? (\r\n                <>\r\n                  {search ? (\r\n                    <>\r\n                      <div>\r\n                        {userData ? (\r\n                          userData\r\n                            .filter(findUser(search))\r\n                            .map((user) => <SidebarUserList data={user} />)\r\n                        ) : (\r\n                          <div className=\"sidebar__chatsContainer_empty\">\r\n                            <span>No Users searched found</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {userData ? (\r\n                        userData.map((user) => <SidebarUserList data={user} />)\r\n                      ) : (\r\n                        <div className=\"sidebar__chatsContainer_empty\">\r\n                          <span>No Users found</span>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <div className=\"sidebar__chatsContainer_loading\">\r\n                  <div>\r\n                    <CircularProgress />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {noRooms && loading ? (\r\n                <div className=\"sidebar__chatsContainer_empty\">\r\n                  <span>No chats</span>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default Drawer2;\r\n"],"sourceRoot":""}