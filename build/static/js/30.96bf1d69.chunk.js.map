{"version":3,"sources":["Sidebar/DrawerLeft.js"],"names":["DropdownMenu","React","lazy","DialogCustom","useStyles","makeStyles","theme","root","display","drawerPaper","position","DrawerLeft","drawerLeft","setDrawerLeft","db","auth","storage","classes","useStateValue","user","useState","name","setName","about","setAbout","showEditName","setShowEditName","showEditAbout","setShowEditAbout","showProfilePhoto","setShowProfilePhoto","uploadPhotoLink","setUploadPhotoLink","showDialogUpload","setShowDialogUpload","menuProfile","setMenuProfile","photo","setPhoto","useEffect","displayName","collection","doc","uid","onSnapshot","data","photoURL","onFileChangeImage","e","a","file","target","files","size","toastInfo","storageRef","ref","isAnonymous","imagesRef","child","fileRef","put","getDownloadURL","console","log","handleUploadPhoto","currentUser","updateProfile","set","merge","menuLists","title","onClick","className","htmlFor","id","type","onChange","accept","Suspense","fallback","anchor","variant","open","paper","in","style","transitionDelay","src","event","currentTarget","menu","handleMenuClose","close","onClose","aria-labelledby","alt","value","styles","borderBottom","preventDefault","update","then","catch","error"],"mappings":"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","file":"static/js/30.96bf1d69.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n//importing components\r\nimport { toastInfo } from \"../shared/toastInfo\";\r\n//importing material-ui\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//importing material-ui-icons\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n//importing styles\r\nimport \"./DrawerLeft.css\";\r\n\r\nconst DropdownMenu = React.lazy(() => import(\"../shared/DropdownMenu\"));\r\nconst DialogCustom = React.lazy(() => import(\"../shared/DialogCustom\"));\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawerPaper: {\r\n    position: \"absolute\",\r\n  },\r\n}));\r\n\r\nfunction DrawerLeft({ drawerLeft, setDrawerLeft, db, auth, storage }) {\r\n  const classes = useStyles();\r\n  const [{ user }] = useStateValue();\r\n  const [name, setName] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [showEditName, setShowEditName] = useState(false);\r\n  const [showEditAbout, setShowEditAbout] = useState(false);\r\n  const [showProfilePhoto, setShowProfilePhoto] = useState(false);\r\n  const [uploadPhotoLink, setUploadPhotoLink] = useState(null);\r\n  const [showDialogUpload, setShowDialogUpload] = useState(false);\r\n  const [menuProfile, setMenuProfile] = useState(null);\r\n  const [photo, setPhoto] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setName(user.displayName);\r\n\r\n    db.collection(\"users\")\r\n      .doc(user.uid)\r\n      .onSnapshot(function (doc) {\r\n        setPhoto(doc.data()?.photoURL);\r\n        setAbout(doc.data()?.about);\r\n      });\r\n  }, [user.uid, user.displayName, db]);\r\n\r\n  const updateName = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (user.uid) {\r\n      db.collection(\"users\")\r\n        .doc(user.uid)\r\n        .update({\r\n          name: name,\r\n        })\r\n        .then(function () {\r\n          console.log(\"Document successfully updated!\");\r\n        })\r\n        .catch(function (error) {\r\n          // The document probably doesn't exist.\r\n          console.error(\"Error updating document: \", error);\r\n        });\r\n\r\n      auth.currentUser.updateProfile({\r\n        displayName: name,\r\n      });\r\n    }\r\n    setShowEditName(false);\r\n  };\r\n\r\n  const updateAbout = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (user.uid) {\r\n      db.collection(\"users\")\r\n        .doc(user.uid)\r\n        .update({\r\n          about: about,\r\n        })\r\n        .then(function () {\r\n          console.log(\"Document successfully updated!\");\r\n        })\r\n        .catch(function (error) {\r\n          // The document probably doesn't exist.\r\n          console.error(\"Error updating document: \", error);\r\n        });\r\n    }\r\n    setShowEditAbout(false);\r\n  };\r\n\r\n  const editName = () => {\r\n    setShowEditName(true);\r\n  };\r\n\r\n  const editAbout = () => {\r\n    setShowEditAbout(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setDrawerLeft(false);\r\n    setShowEditName(false);\r\n    setShowEditAbout(false);\r\n  };\r\n\r\n  const viewPhoto = () => {\r\n    const viewPhoto = \"viewPhoto\";\r\n\r\n    if (user) {\r\n      setShowProfilePhoto(true);\r\n    } else {\r\n      toastInfo(\"You have no photo!\", viewPhoto, \"top-center\");\r\n    }\r\n    setMenuProfile(null);\r\n  };\r\n\r\n  const viewPhotoClose = () => {\r\n    setShowProfilePhoto(false);\r\n  };\r\n\r\n  const takePhoto = () => {\r\n    const takePhoto = \"takePhoto\";\r\n    toastInfo(\"Take photo is not yet available!\", takePhoto, \"top-center\");\r\n  };\r\n\r\n  const removedPhoto = () => {\r\n    const removedPhoto = \"removedPhoto\";\r\n    toastInfo(\r\n      \"Removed photo is not yet available!\",\r\n      removedPhoto,\r\n      \"top-center\"\r\n    );\r\n  };\r\n\r\n  const onFileChangeImage = async (e) => {\r\n    const imageFileSizeToastId = \"imageFileSizeToastId\";\r\n    const file = e.target.files[0];\r\n\r\n    if (file.size > 3 * 1024 * 1024) {\r\n      toastInfo(\r\n        \"Image should not exceed more than 3Mb\",\r\n        imageFileSizeToastId,\r\n        \"top-center\"\r\n      );\r\n    } else {\r\n      const storageRef = storage.ref();\r\n      if (user.isAnonymous === true) {\r\n        const imagesRef = storageRef.child(`user/anonymous/${user.uid}`);\r\n        const fileRef = imagesRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setUploadPhotoLink(await fileRef.getDownloadURL());\r\n        console.log(\"uploading image\", uploadPhotoLink);\r\n      } else {\r\n        const imagesRef = storageRef.child(`user/regular/${user.uid}`);\r\n        const fileRef = imagesRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setUploadPhotoLink(await fileRef.getDownloadURL());\r\n        console.log(\"uploading image\", uploadPhotoLink);\r\n      }\r\n    }\r\n    setMenuProfile(null);\r\n    setShowDialogUpload(true);\r\n  };\r\n\r\n  const uploadPhoto = () => {\r\n    return (\r\n      <div className=\"profileMenu_uploadPhoto\">\r\n        <label htmlFor=\"file-input\">Upload photo</label>\r\n        <input\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          onChange={onFileChangeImage}\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleUploadPhoto = () => {\r\n    const uploadPhotoError = \"uploadPhotoError\";\r\n\r\n    if (uploadPhotoLink) {\r\n      auth.currentUser.updateProfile({\r\n        photoURL: uploadPhotoLink,\r\n      });\r\n      db.collection(\"users\").doc(user.uid).set(\r\n        {\r\n          photoURL: uploadPhotoLink,\r\n        },\r\n        { merge: true }\r\n      );\r\n      setShowDialogUpload(false);\r\n    } else {\r\n      toastInfo(\"Select photo to upload!\", uploadPhotoError, \"top-center\");\r\n    }\r\n  };\r\n\r\n  const handleDialogUploadClose = () => {\r\n    setShowDialogUpload(false);\r\n  };\r\n\r\n  const handleProfileMenu = (event) => {\r\n    setMenuProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileMenuClose = () => {\r\n    setMenuProfile(null);\r\n  };\r\n\r\n  const menuLists = [\r\n    {\r\n      title: \"View Photo\",\r\n      onClick: () => viewPhoto(),\r\n    },\r\n    {\r\n      title: \"Take photo\",\r\n      onClick: () => takePhoto(),\r\n    },\r\n    {\r\n      title: uploadPhoto(),\r\n      onClick: () => handleUploadPhoto(),\r\n    },\r\n    {\r\n      title: \"Removed photo\",\r\n      onClick: () => removedPhoto(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Suspense fallback={<p>Loading</p>}>\r\n      <div>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          variant=\"persistent\"\r\n          open={drawerLeft}\r\n          classes={{ paper: classes.drawerPaper }}\r\n        >\r\n          <div className=\"drawerLeft__header\">\r\n            <div className=\"drawerLeft__header_container\">\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n              <p>Profile</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"drawerLeft__content\">\r\n            <div className=\"drawerLeft__content_photo\">\r\n              <div className=\"profilePhoto\">\r\n                <Zoom\r\n                  in={drawerLeft}\r\n                  style={{ transitionDelay: drawerLeft ? \"300ms\" : \"0ms\" }}\r\n                >\r\n                  {photo ? (\r\n                    <Avatar\r\n                      src={photo}\r\n                      className=\"profilePhoto__layer_bottom\"\r\n                    />\r\n                  ) : (\r\n                    <Avatar />\r\n                  )}\r\n                </Zoom>\r\n                <div\r\n                  className=\"profilePhoto__layer_top\"\r\n                  onClick={handleProfileMenu}\r\n                >\r\n                  <div className=\"profilePhoto__text\">\r\n                    <PhotoCameraIcon />\r\n                    <p>CHANGE</p>\r\n                    <p>PROFILE PHOTO</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <DropdownMenu\r\n                menuLists={menuLists}\r\n                menu={menuProfile}\r\n                handleMenuClose={handleProfileMenuClose}\r\n              />\r\n\r\n              <DialogCustom\r\n                open={showProfilePhoto}\r\n                close={viewPhotoClose}\r\n                photo={photo}\r\n                user={user}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"profileMenu__diaglog\">\r\n              <Dialog\r\n                open={showDialogUpload}\r\n                onClose={handleDialogUploadClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n              >\r\n                <DialogTitle id=\"form-dialog-title-drawerLeft\">\r\n                  Upload Photo\r\n                </DialogTitle>\r\n                <DialogContent id=\"form-dialog-content\">\r\n                  <div className=\"profileMenu__uploadPhoto_dialog\">\r\n                    <img src={uploadPhotoLink} alt=\"\" />\r\n                  </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <div className=\"profileMenu_uploadPhoto_iconButton\">\r\n                    <IconButton onClick={handleUploadPhoto}>\r\n                      <CheckIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </div>\r\n\r\n            <div className=\"drawerLeft__content_name\">\r\n              <p>Your Name</p>\r\n              <form>\r\n                {showEditName ? (\r\n                  <>\r\n                    <input\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      type=\"text\"\r\n                      styles={{ borderBottom: \"1px solid green !important\" }}\r\n                    />\r\n                    <CheckIcon onClick={updateName} />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span>{name}</span>\r\n                    <EditIcon onClick={editName} />\r\n                  </>\r\n                )}\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"drawerLeft__note\">\r\n              <span>\r\n                This is not your username or pin. This name will be visible to\r\n                your Tattle contacts.\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"drawerLeft__content_name\">\r\n              <p>About</p>\r\n              <form>\r\n                {showEditAbout ? (\r\n                  <>\r\n                    <input\r\n                      value={about}\r\n                      onChange={(e) => setAbout(e.target.value)}\r\n                      type=\"text\"\r\n                    />\r\n                    <CheckIcon onClick={updateAbout} />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span>{about}</span>\r\n                    <EditIcon onClick={editAbout} />\r\n                  </>\r\n                )}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default DrawerLeft;\r\n"],"sourceRoot":""}